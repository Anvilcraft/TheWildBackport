{
  "required": true,
  "minVersion": "0.8",
  "package": "com.cursedcauldron.wildbackport.core.mixin",
  "compatibilityLevel": "JAVA_17",
  "mixins": [
    "access.ActivityAccessor",
    "access.AxeItemAccessor",
    "access.CriteriaTriggersAccessor",
    "access.DamageSourceAccessor",
    "access.DoorBlockAccessor",
    "access.FireBlockAccessor",
    "access.MemoryModuleTypeAccessor",
    "access.MobEffectAccessor",
    "access.ModelPartAccessor",
    "access.OverworldBiomesAccessor",
    "access.PersistentEntitySectionManagerAccessor",
    "access.PointedDripstoneBlockAccessor",
    "access.PressurePlateBlockAccessor",
    "access.RecordItemAccessor",
    "access.RegistryAccessor",
    "access.SensorTypeAccessor",
    "access.SheetsAccessor",
    "access.SimpleParticleTypeAccessor",
    "access.StairBlockAccessor",
    "access.StructureTemplatePoolAccessor",
    "access.TrapDoorBlockAccessor",
    "access.TreeDecoratorTypeAccessor",
    "access.TreeFeatureAccessor",
    "access.TrunkPlacerTypeAccessor",
    "access.WalkNodeEvaluatorAccessor",
    "access.WoodButtonBlockAccessor",
    "access.WoodTypeAccessor",
    "common.BlockEntityTypeMixin",
    "common.EntityCallbacksMixin",
    "common.FlyNodeEvaluatorMixin",
    "common.LivingEntityMixin",
    "common.MobEffectMixin",
    "common.MobEffectMixin$MobEffectInstanceMixin",
    "common.NoteBlockMixin",
    "common.PathfinderMobMixin",
    "common.PersistentEntitySectionManagerMixin",
    "common.PlayerMixin",
    "common.PointedDripstoneBlockMixin",
    "common.SculkSensorBlockEntityMixin",
    "common.SculkSensorBlockMixin",
    "common.VibrationListenerMixin",
    "extension.BoatTypeMixin",
    "extension.PoseMixin",
    "network.ClientboundUpdateMobEffectPacketMixin",
    "network.ServerGamePacketListenerImplMixin"
  ],
  "client": [
    "client.FogRendererMixin",
    "client.LightTextureMixin",
    "client.LocalPlayerMixin",
    "client.ModelPartMixin",
    "client.PartDefinitionMixin",
    "network.ClientPacketListenerMixin",
    "network.MultiPlayerGameModeMixin"
  ],
  "injectors": {
    "defaultRequire": 1
  }
}
